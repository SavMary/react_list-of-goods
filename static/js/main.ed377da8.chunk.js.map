{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","visibleGoods","showGoods","setState","reversGood","reverse","resetGoods","sortByAlphabet","sort","a","b","localeCompare","sortByNameLength","length","this","className","Typography","variant","Button","color","type","onClick","ButtonGroup","List","map","good","ListItemText","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iSAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,aAAcJ,G,EAGhBK,UAAY,WACV,EAAKC,SAAS,CACZH,MAAOH,K,EAIXO,WAAa,WACX,EAAKD,UAAS,SAACJ,GAAD,MAAY,CACxBC,MAAO,YAAID,EAAMC,OAAOK,e,EAI5BC,WAAa,WACX,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAOD,EAAME,kB,EAIjBM,eAAiB,WACf,EAAKJ,UAAS,SAACJ,GAAD,MAAY,CACxBC,MAAO,YAAID,EAAMC,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI3DE,iBAAmB,WACjB,EAAKT,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,e,4CAIxD,WACE,IAAQb,EAAUc,KAAKf,MAAfC,MAER,OACE,sBAAKe,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,KACRF,UAAU,QAFZ,mBAMkB,IAAjBf,EAAMa,OAEH,cAACK,EAAA,EAAD,CACEC,MAAM,YACNJ,UAAU,MACVK,KAAK,SACLC,QAASP,KAAKZ,UAJhB,mBASA,eAACoB,EAAA,EAAD,CAAaH,MAAM,YAAY,aAAW,qBAA1C,UACE,cAACD,EAAA,EAAD,CACEE,KAAK,SACLC,QAASP,KAAKV,WAFhB,qBAMA,cAACc,EAAA,EAAD,CACEE,KAAK,SACLC,QAASP,KAAKP,eAFhB,iCAMA,cAACW,EAAA,EAAD,CACEE,KAAK,SACLC,QAASP,KAAKR,WAFhB,mBAMA,cAACY,EAAA,EAAD,CACEE,KAAK,SACLC,QAASP,KAAKF,iBAFhB,+BAQN,cAACW,EAAA,EAAD,CAAMR,UAAU,OAAhB,SACGf,EAAMwB,KAAI,SAAAC,GAAI,OACb,cAACC,EAAA,EAAD,CAAyBX,UAAU,OAAnC,SACGU,GADgBA,e,GAvFbE,IAAMC,WAiGT9B,ICtHf+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed377da8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  Button, ButtonGroup, List, ListItemText, Typography,\n} from '@mui/material';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  visibleGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    visibleGoods: goodsFromServer,\n  };\n\n  showGoods = () => {\n    this.setState({\n      goods: goodsFromServer,\n    });\n  };\n\n  reversGood = () => {\n    this.setState((state) => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState(state => ({\n      goods: state.visibleGoods,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState((state) => ({\n      goods: [...state.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  };\n\n  sortByNameLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Typography\n          variant=\"h5\"\n          className=\"title\"\n        >\n          Goods\n        </Typography>\n        {goods.length === 0\n          ? (\n            <Button\n              color=\"secondary\"\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.showGoods}\n            >\n              Start\n            </Button>\n          ) : (\n            <ButtonGroup color=\"secondary\" aria-label=\"large button group\">\n              <Button\n                type=\"button\"\n                onClick={this.reversGood}\n              >\n                Reverse\n              </Button>\n              <Button\n                type=\"button\"\n                onClick={this.sortByAlphabet}\n              >\n                Sort alphabetically\n              </Button>\n              <Button\n                type=\"button\"\n                onClick={this.resetGoods}\n              >\n                Reset\n              </Button>\n              <Button\n                type=\"button\"\n                onClick={this.sortByNameLength}\n              >\n                Sort by length\n              </Button>\n            </ButtonGroup>\n          )}\n        <List className=\"list\">\n          {goods.map(good => (\n            <ListItemText key={good} className=\"list\">\n              {good}\n            </ListItemText>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}